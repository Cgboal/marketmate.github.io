{"version":3,"sources":["marketmate/subs.cljs"],"mappings":";AAOA,AAAA,AAAKA;AAEL,AAAA,AAACC,AAEA,AAAKC;AAAL,AACE,AAACC,AAAID,AAAGE;;AAEX,AAAA,AAAA,AAAA,AAAA,AAACH,AAGA,AAAAI,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAiBG;AAAjB,AAAAF,AAAAD,AAAA,AAAA,AAAmBI;AAAnB,AAAAH,AAAAD,AAAA,AAAA,AAA2BK;AAA3B,AACE,AAAA,AAACC,AAAOJ,AAAYE,AAAQC;;AAG/B,AAAA,AAAA,AAAA,AAAA,AAACV,AAGA,AAAAY,AAAKL;AAAL,AAAA,AAAAM,AAAAD;AAAA,AAAAN,AAAAO,AAAA,AAAA,AAAiBL;AAAjB,AAAAF,AAAAO,AAAA,AAAA,AAAmBL;AAAnB,AACE,AAAA,AAAgBD;;AAEnB,AAAA,AAAA,AAAA,AAAA,AAACP,AAGA,AAAAc,AAAKE;AAAL,AAAA,AAAAD,AAAAD;AAAA,AAAAR,AAAAS,AAAA,AAAA,AAAWP;AAAX,AAAAF,AAAAS,AAAA,AAAA,AAAaP;AAAb,AACE,AAACS,AAAuB,AAAA,AAAUD,AAAM,AAAA,AAAQA,AAAM,AAAA,AAAYA,AAAM,AAAA,AAAOA,AAAM,AAAA,AAAaA;;AAErG,AAAA,AAAA,AAAA,AAAA,AAAChB,AAGA,AAAAkB,AAAKF;AAAL,AAAA,AAAAG,AAAAD;AAAA,AAAAZ,AAAAa,AAAA,AAAA,AAAWX;AAAX,AAAAF,AAAAa,AAAA,AAAA,AAAaX;AAAb,AACE,AAAA,AAAWQ;;AAEd,AAAA,AAAA,AAAA,AAAA,AAAChB,AAGA,AAAAoB,AAAKJ;AAAL,AAAA,AAAAK,AAAAD;AAAA,AAAAd,AAAAe,AAAA,AAAA,AAAWb;AAAX,AAAAF,AAAAe,AAAA,AAAA,AAAab;AAAb,AACE,AAAA,AAASQ;;AAEZ,AAAA,AAAA,AAAA,AAAA,AAAChB,AAGA,AAAAsB,AAAKN;AAAL,AAAA,AAAAO,AAAAD;AAAA,AAAAhB,AAAAiB,AAAA,AAAA,AAAWf;AAAX,AAAAF,AAAAiB,AAAA,AAAA,AAAaf;AAAb,AACE,AAAA,AAAOQ;;AAEV,AAAA,AAAA,AAAA,AAAA,AAAChB,AAGA,AAAAwB,AAAKR;AAAL,AAAA,AAAAS,AAAAD;AAAA,AAAAlB,AAAAmB,AAAA,AAAA,AAAWjB;AAAX,AAAAF,AAAAmB,AAAA,AAAA,AAAajB;AAAb,AACE,AAAA,AAAcQ;;AAEjB,AAAA,AAAA,AAAA,AAAA,AAAChB,AAGA,AAAA0B,AAAKV;AAAL,AAAA,AAAAW,AAAAD;AAAA,AAAApB,AAAAqB,AAAA,AAAA,AAAWnB;AAAX,AAAAF,AAAAqB,AAAA,AAAA,AAAanB;AAAb,AACE,AAAA,AAAWQ","names":["marketmate.subs/forms-db-path","re_frame.core.reg_sub","db","cljs.core.get","marketmate.db/forms-path","p__42718","vec__42719","cljs.core.nth","forms-data","_","form-id","field-path","cljs.core.get_in","p__42722","vec__42723","p__42726","vec__42727","data","marketmate.calc/calc-position","p__42730","vec__42731","p__42734","vec__42735","p__42738","vec__42739","p__42742","vec__42743","p__42746","vec__42747"],"sourcesContent":["(ns marketmate.subs\n  (:require\n   [re-frame.core :as rf]\n   [marketmate.calc :as pos-calc]\n   [marketmate.db :as db]\n   ))\n\n(def forms-db-path :forms)\n\n(rf/reg-sub\n :forms\n (fn [db]\n   (get db db/forms-path)))\n\n(rf/reg-sub\n :form-value\n :<- [:forms]\n (fn [forms-data [_ form-id field-path]]\n   (get-in forms-data [form-id field-path])))\n\n\n(rf/reg-sub\n :pos-calc/data\n :<- [:forms]\n (fn [forms-data [_ _]]\n   (:position-calc forms-data)))\n\n(rf/reg-sub\n :pos-calc/calc\n :<- [:pos-calc/data]\n (fn [data [_ _]]\n   (pos-calc/calc-position (:balance data) (:entry data) (:stop-loss data) (:exit data) (:risk-limit data))))\n\n(rf/reg-sub\n :pos-calc/quantity\n :<- [:pos-calc/calc]\n (fn [data [_ _]]\n   (:quantity data)))\n\n(rf/reg-sub\n :pos-calc/profit\n :<- [:pos-calc/calc]\n (fn [data [_ _]]\n   (:profit data)))\n\n(rf/reg-sub\n :pos-calc/loss\n :<- [:pos-calc/calc]\n (fn [data [_ _]]\n   (:loss data)))\n\n(rf/reg-sub\n :pos-calc/risk-reward\n :<- [:pos-calc/calc]\n (fn [data [_ _]]\n   (:risk-reward data)))\n\n(rf/reg-sub\n :pos-calc/leverage\n :<- [:pos-calc/calc]\n (fn [data [_ _]]\n   (:leverage data)))\n"]}