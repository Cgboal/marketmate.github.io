{
"version":3,
"file":"module$node_modules$lodash$_createBind.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,sCAAf,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC/FC,WAAaH,OAAA,CAAQ,wCAAR,CADkF,CAE/FI,KAAOJ,OAAA,CAAQ,kCAAR,CA0BXC,OAAA,CAAOC,OAAP,CAXAG,QAAmB,CAACC,IAAD,CAAOC,OAAP,CAAgBC,OAAhB,CAAyB,CAI1CC,QAASA,QAAO,EAAG,CAEjB,MAAO,CADG,IAADC,EAAS,IAATA,GAAkBN,IAAlBM,EAA0B,IAA1BA,WAA0CD,QAA1CC,CAAqDC,IAArDD,CAA4DJ,IAC9D,EAAGM,KAAH,CAASC,MAAA,CAASL,OAAT,CAAmB,IAA5B,CAAkCM,SAAlC,CAFU,CAJuB,IACtCD,OAASN,OAATM,CAbeE,CAYuB,CAEtCJ,KAAOR,UAAA,CAAWG,IAAX,CAMX,OAAOG,QARmC,CAjBuD;",
"sources":["node_modules/lodash/_createBind.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_createBind\"] = function(global,require,module,exports) {\nvar createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBind;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createCtor","root","createBind","func","bitmask","thisArg","wrapper","fn","Ctor","apply","isBind","arguments","WRAP_BIND_FLAG"]
}
