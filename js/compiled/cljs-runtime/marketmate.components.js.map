{"version":3,"sources":["marketmate/components.cljs"],"mappings":";;AAQA,AAAA,AAAMA,AAAmBC,AAAQC,AAAKC,AAAKC;AAA3C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACiBF,AACAC,AACOC,AACF,AAAKC;AAAL,AAAQ,AAAA,AAAA,AAACC,AAA6BL,AAAQE,AAAK,AAAA,AAAIE;;;AAE7E,AAAA,AAAME,AAAsBC,AAAKP,AAAQQ,AAAMP,AAAKC;AAApD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEOM,AAEF,AAACC,AAAQ,AAAA,AAAA,AAAUF,AACnBR,AAAkBC,AAAQC,AAAKC,AAAKM;;AAEzC,AAAA,AAAME,AAAuBC,AAAaT,AAAKD,AAAKE;AAApD,AACE,AAAA,AAAAS,AAAMC,AAAO,AAAA,AAACC,AAAcH;AAA5B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACiBV,AACAC,AAEC,AAAKW,AACCV;;AAI1B,AAAA,AAAMY,AAA+BR,AAAKI,AAAaH,AAAMP,AAAKC;AAAlE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEOM,AAEF,AAACC,AAAQ,AAAA,AAAA,AAAUF,AACnBG,AAAsBC,AAAaT,AAAKD,AAAKO;;AAElD,AAAA,AAAMQ;AAAN,AACE,AAAA,AAAMhB;AACAiB,AAAY,AAAA,AAACC;AACbC,AAAa,AAAA,AAACD;AAFpB,AAGE,AAAA,AAAA,AAACb,AAAyBL;;AAC1B;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAY,AAAA,AAQqCK,AAAsB,AAAKb;AAAL,AACE,AAAiBA;;AACjB,AAAA,AAAA,AAACgB,AAAOH;;AACR,AAAA,AAACG,AAAOD;;AACR,AAAA,AAAA,AAAA,AAAA,AAACd,AAA6BL;AAZ3F,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAY,AAAA,AAcqCO,AAAuB,AAAKf;AAAL,AACE,AAAiBA;;AACjB,AAAA,AAAA,AAACgB,AAAOD;;AACR,AAAA,AAACC,AAAOH;;AACR,AAAA,AAAA,AAAA,AAAA,AAACZ,AAA6BL;AAlB5F,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAmBOM,AAA8BN,AAC9BM,AAA8BN,AAC9BM,AAA8BN,AAC9BM,AAA8BN,AAC9BM,AAA+BN,AAI/Be,AACAA,AACAA,AACAA","names":["marketmate.components/placeholder-input","form-id","type","name","placeholder","e","re-frame.core/dispatch","marketmate.components/form-input-component","icon","label","cljs.core.keyword","marketmate.components/form-result-component","subscription","cljs.core/deref","value","re_frame.core.subscribe","marketmate.components/form-labeled-result-component","marketmate.components/position-calculator","long-active","reagent.core.atom","short-active","cljs.core/reset!"],"sourcesContent":["(ns marketmate.components\n  (:require\n   [re-frame.core :as rf]\n   [marketmate.subs :as subs]\n   [reagent.core :as r]\n   [\"semantic-ui-react\" :as ui]\n   ))\n\n(defn placeholder-input [form-id type name placeholder]\n  [:input {:type type\n           :name name\n           :placeholder placeholder\n           :on-change (fn [e] (rf/dispatch [:set-form-field form-id name (-> e .-target .-value)]))}])\n\n(defn form-input-component [icon form-id label type name]\n  [:form.ui.large.form\n   [:p label]\n   [:div.ui.left.icon.input\n    [(keyword (str \"i.\" icon \".icon\"))]\n    [placeholder-input form-id type name label]]])\n\n(defn form-result-component [subscription name type placeholder]\n  (let [value @(rf/subscribe [subscription])]\n    [:input {:type type\n             :name name\n             :disabled true\n             :value (str value)\n             :placeholder placeholder\n             }]))\n\n\n(defn form-labeled-result-component [icon subscription label type name]\n  [:form.ui.large.form\n   [:p label]\n   [:div.ui.left.icon.input\n    [(keyword (str \"i.\" icon \".icon\"))]\n    [form-result-component subscription name type label]]])\n\n(defn position-calculator []\n  (let [form-id :position-calc\n        long-active (r/atom [])\n        short-active (r/atom [])]\n    (rf/dispatch [:clear-form form-id])\n    (fn []\n      [:div.ui.stacked.segment {:style {:width \"100%\"}}\n       [:div.ui.left.aligned.grid\n        [:div.ui.row\n         [:div.eight.wide.column\n           [:form.ui.large.form\n            [:p \"Trade Direction\"]\n            [:div.ui.buttons {:style {:width \"auto\"}}\n             [:button.ui.button {:class @long-active :on-click (fn [e]\n                                                                 (.preventDefault e)\n                                                                 (reset! long-active [\"positive\"])\n                                                                 (reset! short-active [])\n                                                                 (rf/dispatch [:set-form-field form-id \"direction\" \"long\"]))}  \"Long\"]\n             [:div.or]\n             [:button.ui.button {:class @short-active :on-click (fn [e]\n                                                                  (.preventDefault e)\n                                                                  (reset! short-active [\"negative\"])\n                                                                  (reset! long-active [])\n                                                                  (rf/dispatch [:set-form-field form-id \"direction\" \"short\"]))} \"Short\"]]]\n          [form-input-component \"dollar\" form-id \"Account Balance\" \"number\" \"balance\"]\n          [form-input-component \"dollar\" form-id \"Entry Price\" \"number\" \"entry\"]\n          [form-input-component \"dollar\" form-id \"Stop Loss\" \"number\" \"stop-loss\"]\n          [form-input-component \"dollar\" form-id \"Target Price\" \"number\" \"exit\"]\n          [form-input-component \"percent\" form-id \"Risk Limit\" \"number\" \"risk-limit\"]\n          ]\n         \n         [:div.eight.wide.column\n          [form-labeled-result-component \"hashtag\" :pos-calc/quantity \"Quantity\" \"number\" \"quantity\"]\n          [form-labeled-result-component \"dollar\" :pos-calc/profit \"Potential Profit\" \"number\" \"potential-profit\"]\n          [form-labeled-result-component \"dollar\" :pos-calc/loss \"Potential Loss\" \"number\" \"potential-loss\"]\n          [form-labeled-result-component \"hashtag\" :pos-calc/risk-reward \"Risk Reward\" \"text\" \"risk-reward\"]\n          \n          ]]]\n       ])))\n"]}